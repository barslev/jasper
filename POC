import { concat, from, fromEvent, generate, interval, Observable, of } from "rxjs";
import { buffer, concatAll, concatMap, map, mergeAll, mergeMap, switchMap, switchMapTo, tap, toArray } from "rxjs/operators";

const clicks = fromEvent(document, "click").pipe(
  tap(() => console.log("clicked"))
);
// const source = generate(0, x => x < 50, x => x + 10).pipe(buffer(clicks));

// source.subscribe(x => console.log(x));

const intervalEvents = interval(1000).pipe(
  switchMap(x => {
    return of(of(`hello index ${x}`));
  })
);
const buffered = intervalEvents.pipe(
  buffer(clicks),
  mergeMap((x: Observable<string>[]) => {
    // console.log(`processing ${x}`);
    return concat(x).pipe(
      mergeAll(),
      mergeMap(results => {
        return of(results);
      })
    );
  })
);
buffered.subscribe(x => console.log(x));
